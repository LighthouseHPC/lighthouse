SSTEVD computes all eigenvalues and, optionally, eigenvectors of a
real symmetric tridiagonal matrix. If eigenvectors are desired, it
uses a divide and conquer algorithm.
The divide and conquer algorithm makes very mild assumptions about
floating point arithmetic. It will work on machines with a guard
digit in add/subtract, or on those binary machines without guard
digits which subtract like the Cray X-MP, Cray Y-MP, Cray C-90, or
Cray-2. It could conceivably fail on hexadecimal or decimal machines
without guard digits, but we know of none.
Arguments:
\param[in] JOBZ
         JOBZ is CHARACTER*1
         = 'N':  Compute eigenvalues only;
         = 'V':  Compute eigenvalues and eigenvectors.
\param[in] N
         N is INTEGER
         The order of the matrix.  N >= 0.
\param[in,out] D
         D is REAL array, dimension (N)
         On entry, the n diagonal elements of the tridiagonal matrix
         A.
         On exit, if INFO = 0, the eigenvalues in ascending order.
\param[in,out] E
         E is REAL array, dimension (N-1)
         On entry, the (n-1) subdiagonal elements of the tridiagonal
         matrix A, stored in elements 1 to N-1 of E.
         On exit, the contents of E are destroyed.
\param[out] Z
         Z is REAL array, dimension (LDZ, N)
         If JOBZ = 'V', then if INFO = 0, Z contains the orthonormal
         eigenvectors of the matrix A, with the i-th column of Z
         holding the eigenvector associated with D(i).
         If JOBZ = 'N', then Z is not referenced.
\param[in] LDZ
         LDZ is INTEGER
         The leading dimension of the array Z.  LDZ >= 1, and if
         JOBZ = 'V', LDZ >= max(1,N).
\param[out] WORK
         WORK is REAL array,
                                        dimension (LWORK)
         On exit, if INFO = 0, WORK(1) returns the optimal LWORK.
\param[in] LWORK
         LWORK is INTEGER
         The dimension of the array WORK.
         If JOBZ  = 'N' or N <= 1 then LWORK must be at least 1.
         If JOBZ  = 'V' and N > 1 then LWORK must be at least
                        ( 1 + 4*N + N**2 ).
         If LWORK = -1, then a workspace query is assumed; the routine
         only calculates the optimal sizes of the WORK and IWORK
         arrays, returns these values as the first entries of the WORK
         and IWORK arrays, and no error message related to LWORK or
         LIWORK is issued by XERBLA.
\param[out] IWORK
         IWORK is INTEGER array, dimension (MAX(1,LIWORK))
         On exit, if INFO = 0, IWORK(1) returns the optimal LIWORK.
\param[in] LIWORK
         LIWORK is INTEGER
         The dimension of the array IWORK.
         If JOBZ  = 'N' or N <= 1 then LIWORK must be at least 1.
         If JOBZ  = 'V' and N > 1 then LIWORK must be at least 3+5*N.
         If LIWORK = -1, then a workspace query is assumed; the
         routine only calculates the optimal sizes of the WORK and
         IWORK arrays, returns these values as the first entries of
         the WORK and IWORK arrays, and no error message related to
         LWORK or LIWORK is issued by XERBLA.
\param[out] INFO
         INFO is INTEGER
         = 0:  successful exit
         < 0:  if INFO = -i, the i-th argument had an illegal value
         > 0:  if INFO = i, the algorithm failed to converge; i
               off-diagonal elements of E did not converge to zero.
Authors:
\author Univ. of Tennessee 
\author Univ. of California Berkeley 
\author Univ. of Colorado Denver 
\author NAG Ltd. 
\date November 2011
\ingroup realOTHEReigen
   SUBROUTINE SSTEVD( JOBZ, N, D, E, Z, LDZ, WORK, LWORK, IWORK,
  $                   LIWORK, INFO )
-- LAPACK driver routine (version 3.4.0) --
-- LAPACK is a software package provided by Univ. of Tennessee,    --
