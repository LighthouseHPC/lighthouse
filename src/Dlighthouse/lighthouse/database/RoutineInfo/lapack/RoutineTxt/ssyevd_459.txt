SSYEVD computes all eigenvalues and, optionally, eigenvectors of a
real symmetric matrix A. If eigenvectors are desired, it uses a
divide and conquer algorithm.
The divide and conquer algorithm makes very mild assumptions about
floating point arithmetic. It will work on machines with a guard
digit in add/subtract, or on those binary machines without guard
digits which subtract like the Cray X-MP, Cray Y-MP, Cray C-90, or
Cray-2. It could conceivably fail on hexadecimal or decimal machines
without guard digits, but we know of none.
Because of large use of BLAS of level 3, SSYEVD needs N**2 more
workspace than SSYEVX.
Arguments:
\param[in] JOBZ
         JOBZ is CHARACTER*1
         = 'N':  Compute eigenvalues only;
         = 'V':  Compute eigenvalues and eigenvectors.
\param[in] UPLO
         UPLO is CHARACTER*1
         = 'U':  Upper triangle of A is stored;
         = 'L':  Lower triangle of A is stored.
\param[in] N
         N is INTEGER
         The order of the matrix A.  N >= 0.
\param[in,out] A
         A is REAL array, dimension (LDA, N)
         On entry, the symmetric matrix A.  If UPLO = 'U', the
         leading N-by-N upper triangular part of A contains the
         upper triangular part of the matrix A.  If UPLO = 'L',
         the leading N-by-N lower triangular part of A contains
         the lower triangular part of the matrix A.
         On exit, if JOBZ = 'V', then if INFO = 0, A contains the
         orthonormal eigenvectors of the matrix A.
         If JOBZ = 'N', then on exit the lower triangle (if UPLO='L')
         or the upper triangle (if UPLO='U') of A, including the
         diagonal, is destroyed.
\param[in] LDA
         LDA is INTEGER
         The leading dimension of the array A.  LDA >= max(1,N).
\param[out] W
         W is REAL array, dimension (N)
         If INFO = 0, the eigenvalues in ascending order.
\param[out] WORK
         WORK is REAL array,
                                        dimension (LWORK)
         On exit, if INFO = 0, WORK(1) returns the optimal LWORK.
\param[in] LWORK
         LWORK is INTEGER
         The dimension of the array WORK.
         If N <= 1,               LWORK must be at least 1.
         If JOBZ = 'N' and N > 1, LWORK must be at least 2*N+1.
         If JOBZ = 'V' and N > 1, LWORK must be at least 
                                               1 + 6*N + 2*N**2.
         If LWORK = -1, then a workspace query is assumed; the routine
         only calculates the optimal sizes of the WORK and IWORK
         arrays, returns these values as the first entries of the WORK
         and IWORK arrays, and no error message related to LWORK or
         LIWORK is issued by XERBLA.
\param[out] IWORK
         IWORK is INTEGER array, dimension (MAX(1,LIWORK))
         On exit, if INFO = 0, IWORK(1) returns the optimal LIWORK.
\param[in] LIWORK
         LIWORK is INTEGER
         The dimension of the array IWORK.
         If N <= 1,                LIWORK must be at least 1.
         If JOBZ  = 'N' and N > 1, LIWORK must be at least 1.
         If JOBZ  = 'V' and N > 1, LIWORK must be at least 3 + 5*N.
         If LIWORK = -1, then a workspace query is assumed; the
         routine only calculates the optimal sizes of the WORK and
         IWORK arrays, returns these values as the first entries of
         the WORK and IWORK arrays, and no error message related to
         LWORK or LIWORK is issued by XERBLA.
\param[out] INFO
         INFO is INTEGER
         = 0:  successful exit
         < 0:  if INFO = -i, the i-th argument had an illegal value
         > 0:  if INFO = i and JOBZ = 'N', then the algorithm failed
               to converge; i off-diagonal elements of an intermediate
               tridiagonal form did not converge to zero;
               if INFO = i and JOBZ = 'V', then the algorithm failed
               to compute an eigenvalue while working on the submatrix
               lying in rows and columns INFO/(N+1) through
               mod(INFO,N+1).
Authors:
\author Univ. of Tennessee 
\author Univ. of California Berkeley 
\author Univ. of Colorado Denver 
\author NAG Ltd. 
\date November 2011
\ingroup realSYeigen
\par Contributors:
Jeff Rutter, Computer Science Division, University of California
at Berkeley, USA \n
 Modified by Francoise Tisseur, University of Tennessee \n
 Modified description of INFO. Sven, 16 Feb 05. \n
   SUBROUTINE SSYEVD( JOBZ, UPLO, N, A, LDA, W, WORK, LWORK, IWORK,
  $                   LIWORK, INFO )
-- LAPACK driver routine (version 3.4.0) --
-- LAPACK is a software package provided by Univ. of Tennessee,    --
