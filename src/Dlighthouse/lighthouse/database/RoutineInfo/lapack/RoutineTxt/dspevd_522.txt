DSPEVD computes all the eigenvalues and, optionally, eigenvectors
of a real symmetric matrix A in packed storage. If eigenvectors are
desired, it uses a divide and conquer algorithm.
The divide and conquer algorithm makes very mild assumptions about
floating point arithmetic. It will work on machines with a guard
digit in add/subtract, or on those binary machines without guard
digits which subtract like the Cray X-MP, Cray Y-MP, Cray C-90, or
Cray-2. It could conceivably fail on hexadecimal or decimal machines
without guard digits, but we know of none.
Arguments:
\param[in] JOBZ
         JOBZ is CHARACTER*1
         = 'N':  Compute eigenvalues only;
         = 'V':  Compute eigenvalues and eigenvectors.
\param[in] UPLO
         UPLO is CHARACTER*1
         = 'U':  Upper triangle of A is stored;
         = 'L':  Lower triangle of A is stored.
\param[in] N
         N is INTEGER
         The order of the matrix A.  N >= 0.
\param[in,out] AP
         AP is DOUBLE PRECISION array, dimension (N*(N+1)/2)
         On entry, the upper or lower triangle of the symmetric matrix
         A, packed columnwise in a linear array.  The j-th column of A
         is stored in the array AP as follows:
         if UPLO = 'U', AP(i + (j-1)*j/2) = A(i,j) for 1<=i<=j;
         if UPLO = 'L', AP(i + (j-1)*(2*n-j)/2) = A(i,j) for j<=i<=n.
         On exit, AP is overwritten by values generated during the
         reduction to tridiagonal form.  If UPLO = 'U', the diagonal
         and first superdiagonal of the tridiagonal matrix T overwrite
         the corresponding elements of A, and if UPLO = 'L', the
         diagonal and first subdiagonal of T overwrite the
         corresponding elements of A.
\param[out] W
         W is DOUBLE PRECISION array, dimension (N)
         If INFO = 0, the eigenvalues in ascending order.
\param[out] Z
         Z is DOUBLE PRECISION array, dimension (LDZ, N)
         If JOBZ = 'V', then if INFO = 0, Z contains the orthonormal
         eigenvectors of the matrix A, with the i-th column of Z
         holding the eigenvector associated with W(i).
         If JOBZ = 'N', then Z is not referenced.
\param[in] LDZ
         LDZ is INTEGER
         The leading dimension of the array Z.  LDZ >= 1, and if
         JOBZ = 'V', LDZ >= max(1,N).
\param[out] WORK
         WORK is DOUBLE PRECISION array,
                                        dimension (LWORK)
         On exit, if INFO = 0, WORK(1) returns the required LWORK.
\param[in] LWORK
         LWORK is INTEGER
         The dimension of the array WORK.
         If N <= 1,               LWORK must be at least 1.
         If JOBZ = 'N' and N > 1, LWORK must be at least 2*N.
         If JOBZ = 'V' and N > 1, LWORK must be at least
                                                1 + 6*N + N**2.
         If LWORK = -1, then a workspace query is assumed; the routine
         only calculates the required sizes of the WORK and IWORK
         arrays, returns these values as the first entries of the WORK
         and IWORK arrays, and no error message related to LWORK or
         LIWORK is issued by XERBLA.
\param[out] IWORK
         IWORK is INTEGER array, dimension (MAX(1,LIWORK))
         On exit, if INFO = 0, IWORK(1) returns the required LIWORK.
\param[in] LIWORK
         LIWORK is INTEGER
         The dimension of the array IWORK.
         If JOBZ  = 'N' or N <= 1, LIWORK must be at least 1.
         If JOBZ  = 'V' and N > 1, LIWORK must be at least 3 + 5*N.
         If LIWORK = -1, then a workspace query is assumed; the
         routine only calculates the required sizes of the WORK and
         IWORK arrays, returns these values as the first entries of
         the WORK and IWORK arrays, and no error message related to
         LWORK or LIWORK is issued by XERBLA.
\param[out] INFO
         INFO is INTEGER
         = 0:  successful exit
         < 0:  if INFO = -i, the i-th argument had an illegal value.
         > 0:  if INFO = i, the algorithm failed to converge; i
               off-diagonal elements of an intermediate tridiagonal
               form did not converge to zero.
Authors:
\author Univ. of Tennessee 
\author Univ. of California Berkeley 
\author Univ. of Colorado Denver 
\author NAG Ltd. 
\date November 2011
\ingroup doubleOTHEReigen
   SUBROUTINE DSPEVD( JOBZ, UPLO, N, AP, W, Z, LDZ, WORK, LWORK,
  $                   IWORK, LIWORK, INFO )
-- LAPACK driver routine (version 3.4.0) --
-- LAPACK is a software package provided by Univ. of Tennessee,    --
