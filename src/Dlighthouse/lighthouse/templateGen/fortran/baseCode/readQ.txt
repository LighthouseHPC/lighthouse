            begin N
	    WRITE(*, '(A)', ADVANCE = 'NO') "Input the number of columns of matrix A. N >= 0. N = "
	    READ *, N 
            end N
            
            
            begin M
            WRITE(*, '(A)', ADVANCE = 'NO') "Input the number of rows of matrix A. M >= 0. M = "
            READ *, M
            end M
            
            
            begin NRHS
	    WRITE(*, '(A)', ADVANCE = 'NO') "Input number of columns in B. NRHS = "
            READ *, NRHS
            end NRHS
            
            
            begin LDB
	    WRITE(*, '(A)', ADVANCE = 'NO') "Input the leading dimension of matrix B. LDB >= max(1,N). LDB = "
            READ *, LDB
            end LDB
            
            
            begin LDA
	    WRITE(*, '(A)', ADVANCE = 'NO') "Input the leading dimension of matrix A. LDA >= max(1,N). LDA = "
            READ *, LDA
            end LDA
            
            
            !--- for band matrix ---!
            begin LDAB
	    WRITE(*, '(A)', ADVANCE = 'NO') "Input the leading dimension of the matrix AB. LDA_condition. LDAB = "
            READ *, LDAB
            end LDAB
            
            
            begin KL
	    WRITE(*, '(A)', ADVANCE = 'NO') "Input the number of subdiagonals within the band of A. KL >= 0. KL = "
            READ *, KL
            end KL


            begin KU
	    WRITE(*, '(A)', ADVANCE = 'NO') "Input the number of superdiagonals within the band of A. KU >= 0. KU = "
            READ *, KU
            end KU
            
 
            begin KD
	    WRITE(*, '(A)', ADVANCE = 'NO') "Input the number of superdiagonals/subdiagonals of the matrix A. KD >= 0. KD = "
            READ *, KD
            end KD
            !--- end for band matrix ---!

            
            begin LWORK
            
            LWORK = N*N
            
            end LWORK
            
            
            begin UPLO
            WRITE(*, '(A)', ADVANCE = 'NO') "Input 'U' for upper triangular matrix or 'L' for lower triangular matrix. UPLO = "
            READ *, UPLO
            end UPLO
            