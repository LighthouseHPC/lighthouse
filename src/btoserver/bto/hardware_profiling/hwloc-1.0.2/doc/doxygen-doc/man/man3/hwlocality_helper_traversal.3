.TH "Advanced Traversal Helpers" 3 "20 Jul 2010" "Version 1.0.2" "Hardware Locality (hwloc)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Advanced Traversal Helpers \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "HWLOC_DECLSPEC unsigned \fBhwloc_get_closest_objs\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_t\fP src, \fBhwloc_obj_t\fP *__hwloc_restrict objs, unsigned max)"
.br
.RI "\fIDo a depth-first traversal of the topology to find and sort. \fP"
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure \fBhwloc_get_obj_below_by_type\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type1, unsigned idx1, \fBhwloc_obj_type_t\fP type2, unsigned idx2)"
.br
.RI "\fIFind an object below another object, both specified by types and indexes. \fP"
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure \fBhwloc_get_obj_below_array_by_type\fP (\fBhwloc_topology_t\fP topology, int nr, \fBhwloc_obj_type_t\fP *typev, unsigned *idxv)"
.br
.RI "\fIFind an object below a chain of objects specified by types and indexes. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "HWLOC_DECLSPEC unsigned hwloc_get_closest_objs (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_t\fP src, \fBhwloc_obj_t\fP *__hwloc_restrict objs, unsigned max)"
.PP
Do a depth-first traversal of the topology to find and sort. all objects that are at the same depth than \fCsrc\fP. Report in \fCobjs\fP up to \fCmax\fP physically closest ones to \fCsrc\fP.
.PP
\fBReturns:\fP
.RS 4
the number of objects returned in \fCobjs\fP. 
.RE
.PP

.SS "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure hwloc_get_obj_below_array_by_type (\fBhwloc_topology_t\fP topology, int nr, \fBhwloc_obj_type_t\fP * typev, unsigned * idxv)\fC [static]\fP"
.PP
Find an object below a chain of objects specified by types and indexes. This is a generalized version of \fBhwloc_get_obj_below_by_type()\fP.
.PP
Arrays \fCtypev\fP and \fCidxv\fP must contain \fCnr\fP types and indexes.
.PP
Start from the top system object and walk the arrays \fCtypev\fP and \fCidxv\fP. For each type and index couple in the arrays, look under the previously found object to find the index-th object of the given type. Indexes are specified within the parent, not withing the entire system.
.PP
For instance, if nr is 3, typev contains NODE, SOCKET and CORE, and idxv contains 0, 1 and 2, return the third core object below the second socket below the first NUMA node. 
.SS "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure hwloc_get_obj_below_by_type (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type1, unsigned idx1, \fBhwloc_obj_type_t\fP type2, unsigned idx2)\fC [static]\fP"
.PP
Find an object below another object, both specified by types and indexes. Start from the top system object and find object of type \fCtype1\fP and index \fCidx1\fP. Then look below this object and find another object of type \fCtype2\fP and index \fCidx2\fP. Indexes are specified within the parent, not withing the entire system.
.PP
For instance, if type1 is SOCKET, idx1 is 2, type2 is CORE and idx2 is 3, return the fourth core object below the third socket. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Hardware Locality (hwloc) from the source code.
