.TH "Basic Traversal Helpers" 3 "20 Jul 2010" "Version 1.0.2" "Hardware Locality (hwloc)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Basic Traversal Helpers \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure \fBhwloc_get_root_obj\fP (\fBhwloc_topology_t\fP topology)"
.br
.RI "\fIReturns the top-object of the topology-tree. \fP"
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure \fBhwloc_get_ancestor_obj_by_depth\fP (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, unsigned depth, \fBhwloc_obj_t\fP obj)"
.br
.RI "\fIReturns the ancestor object of \fCobj\fP at depth \fCdepth\fP. \fP"
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure \fBhwloc_get_ancestor_obj_by_type\fP (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, \fBhwloc_obj_type_t\fP type, \fBhwloc_obj_t\fP obj)"
.br
.RI "\fIReturns the ancestor object of \fCobj\fP with type \fCtype\fP. \fP"
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP \fBhwloc_get_next_obj_by_depth\fP (\fBhwloc_topology_t\fP topology, unsigned depth, \fBhwloc_obj_t\fP prev)"
.br
.RI "\fIReturns the next object at depth \fCdepth\fP. \fP"
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP \fBhwloc_get_next_obj_by_type\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type, \fBhwloc_obj_t\fP prev)"
.br
.RI "\fIReturns the next object of type \fCtype\fP. \fP"
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure \fBhwloc_get_pu_obj_by_os_index\fP (\fBhwloc_topology_t\fP topology, unsigned os_index)"
.br
.RI "\fIReturns the object of type \fBHWLOC_OBJ_PU\fP with \fCos_index\fP. \fP"
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP \fBhwloc_get_next_child\fP (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, \fBhwloc_obj_t\fP parent, \fBhwloc_obj_t\fP prev)"
.br
.RI "\fIReturn the next child. \fP"
.ti -1c
.RI "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure \fBhwloc_get_common_ancestor_obj\fP (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, \fBhwloc_obj_t\fP obj1, \fBhwloc_obj_t\fP obj2)"
.br
.RI "\fIReturns the common parent object to objects lvl1 and lvl2. \fP"
.ti -1c
.RI "static __hwloc_inline int __hwloc_attribute_pure \fBhwloc_obj_is_in_subtree\fP (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, \fBhwloc_obj_t\fP obj, \fBhwloc_obj_t\fP subtree_root)"
.br
.RI "\fIReturns true if _obj_ is inside the subtree beginning with \fCsubtree_root\fP. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure hwloc_get_ancestor_obj_by_depth (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, unsigned depth, \fBhwloc_obj_t\fP obj)\fC [static]\fP"
.PP
Returns the ancestor object of \fCobj\fP at depth \fCdepth\fP. 
.SS "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure hwloc_get_ancestor_obj_by_type (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, \fBhwloc_obj_type_t\fP type, \fBhwloc_obj_t\fP obj)\fC [static]\fP"
.PP
Returns the ancestor object of \fCobj\fP with type \fCtype\fP. 
.SS "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure hwloc_get_common_ancestor_obj (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, \fBhwloc_obj_t\fP obj1, \fBhwloc_obj_t\fP obj2)\fC [static]\fP"
.PP
Returns the common parent object to objects lvl1 and lvl2. 
.SS "static __hwloc_inline \fBhwloc_obj_t\fP hwloc_get_next_child (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, \fBhwloc_obj_t\fP parent, \fBhwloc_obj_t\fP prev)\fC [static]\fP"
.PP
Return the next child. If \fCprev\fP is \fCNULL\fP, return the first child. 
.SS "static __hwloc_inline \fBhwloc_obj_t\fP hwloc_get_next_obj_by_depth (\fBhwloc_topology_t\fP topology, unsigned depth, \fBhwloc_obj_t\fP prev)\fC [static]\fP"
.PP
Returns the next object at depth \fCdepth\fP. If \fCprev\fP is \fCNULL\fP, return the first object at depth \fCdepth\fP. 
.SS "static __hwloc_inline \fBhwloc_obj_t\fP hwloc_get_next_obj_by_type (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type, \fBhwloc_obj_t\fP prev)\fC [static]\fP"
.PP
Returns the next object of type \fCtype\fP. If \fCprev\fP is \fCNULL\fP, return the first object at type \fCtype\fP. If there are multiple or no depth for given type, return \fCNULL\fP and let the caller fallback to \fBhwloc_get_next_obj_by_depth()\fP. 
.SS "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure hwloc_get_pu_obj_by_os_index (\fBhwloc_topology_t\fP topology, unsigned os_index)\fC [static]\fP"
.PP
Returns the object of type \fBHWLOC_OBJ_PU\fP with \fCos_index\fP. \fBNote:\fP
.RS 4
The \fCos_index\fP field of object should most of the times only be used for pretty-printing purpose. Type \fBHWLOC_OBJ_PU\fP is the only case where \fCos_index\fP could actually be useful, when manually binding to processors. However, using CPU sets to hide this complexity should often be preferred. 
.RE
.PP

.SS "static __hwloc_inline \fBhwloc_obj_t\fP __hwloc_attribute_pure hwloc_get_root_obj (\fBhwloc_topology_t\fP topology)\fC [static]\fP"
.PP
Returns the top-object of the topology-tree. Its type is typically \fBHWLOC_OBJ_MACHINE\fP but it could be different for complex topologies. This function replaces the old deprecated hwloc_get_system_obj(). 
.SS "static __hwloc_inline int __hwloc_attribute_pure hwloc_obj_is_in_subtree (\fBhwloc_topology_t\fP topology __hwloc_attribute_unused, \fBhwloc_obj_t\fP obj, \fBhwloc_obj_t\fP subtree_root)\fC [static]\fP"
.PP
Returns true if _obj_ is inside the subtree beginning with \fCsubtree_root\fP. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Hardware Locality (hwloc) from the source code.
