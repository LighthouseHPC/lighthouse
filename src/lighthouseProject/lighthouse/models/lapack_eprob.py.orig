from django.db import models
from lighthouse.models.lapack_le import lapack_RoutineInfo

EPROB_PROBLEM_CHOICES = (
	(u'eval' 				,u'Eigenproblem'),
	(u'svd'					,u'Singular Value Decomposition')
)

EPROB_NOYES_CHOICES = (
	('n'	,			'No'),
	('y'	,			'Yes'),
)

EPROB_MATRIX_CHOICES = (
	('gen',			'General'),
	('sym',			'Symmetric'),
	('her',			'Hermitian'),	
)

EPROB_STORAGE_CHOICES = (
	('full',			'Full'),
	('band',			'Band'),
	('pack',			'Packed'),
	('tri',			'Tridiagonal'),
)

EPROB_PRECISION_CHOICES = (
	('s',			'Single'),
	('d',			'Double'),
	('c',			'Single'),
	('z',			'Double')
)

EPROB_ALGORITHM_CHOICES = (
	('n', 			'Default algorithm'),
	('dc',			'Divide and Conquer'),
	('rrr',		'Relatively Robust Representation'),
	('mrrr',		'Multiple Relatively Robust Representation'),
)


class lapack_eprob_simple(models.Model):
	generalized = models.CharField('Generalized', max_length=1, choices=EPROB_NOYES_CHOICES)
	kind = models.CharField('Problem Kind', max_length=4, choices=EPROB_PROBLEM_CHOICES)
	compl = models.CharField('Complex Numbers', max_length=1, choices=EPROB_NOYES_CHOICES)
	matrix = models.CharField('Matrix Type', max_length=3, choices=EPROB_MATRIX_CHOICES)
	storage = models.CharField('Matrix Storage', max_length=4, choices=EPROB_STORAGE_CHOICES, blank = True, null = True)
	schur = models.CharField('Schur Form', max_length=1, choices=EPROB_NOYES_CHOICES, blank = True, null = True)
	evaluerange = models.CharField('Range of Eigenvalues', max_length=1, choices=EPROB_NOYES_CHOICES, blank= True, null = True)
	algorithm = models.CharField('Algorithm Used', max_length=4, choices=EPROB_ALGORITHM_CHOICES, blank = True, null = True)
	balancing = models.CharField('Balancing Transform', max_length=1, choices=EPROB_NOYES_CHOICES, blank = True, null = True)
	schurform = models.CharField('Ordered Schur Form', max_length=1, choices=EPROB_NOYES_CHOICES, blank = True, null = True)
	precision = models.CharField('Number Precision', max_length=1, choices=EPROB_PRECISION_CHOICES)
	routineName = models.CharField('Routine Name', max_length=8)
	url = models.URLField('Function URL', blank = True, null = True)
	info = models.ForeignKey(lapack_RoutineInfo, primary_key=True)

	def __unicode__(self):
		return self.routineName
	
	class Meta:
		app_label = 'lighthouse'
