This routine is deprecated and has been replaced by routine CGELSY.
CGELSX computes the minimum-norm solution to a complex linear least
squares problem:
    minimize || A * X - B ||
using a complete orthogonal factorization of A.  A is an M-by-N
matrix which may be rank-deficient.
Several right hand side vectors b and solution vectors x can be
handled in a single call; they are stored as the columns of the
M-by-NRHS right hand side matrix B and the N-by-NRHS solution
matrix X.
The routine first computes a QR factorization with column pivoting:
    A * P = Q * [ R11 R12 ]
                [  0  R22 ]
with R11 defined as the largest leading submatrix whose estimated
condition number is less than 1/RCOND.  The order of R11, RANK,
is the effective rank of A.
Then, R22 is considered to be negligible, and R12 is annihilated
by unitary transformations from the right, arriving at the
complete orthogonal factorization:
   A * P = Q * [ T11 0 ] * Z
               [  0  0 ]
The minimum-norm solution is then
   X = P * Z**H [ inv(T11)*Q1**H*B ]
                [        0         ]
where Q1 consists of the first RANK columns of Q.
Arguments:
\param[in] M
         M is INTEGER
         The number of rows of the matrix A.  M >= 0.
\param[in] N
         N is INTEGER
         The number of columns of the matrix A.  N >= 0.
\param[in] NRHS
         NRHS is INTEGER
         The number of right hand sides, i.e., the number of
         columns of matrices B and X. NRHS >= 0.
\param[in,out] A
         A is COMPLEX array, dimension (LDA,N)
         On entry, the M-by-N matrix A.
         On exit, A has been overwritten by details of its
         complete orthogonal factorization.
\param[in] LDA
         LDA is INTEGER
         The leading dimension of the array A.  LDA >= max(1,M).
\param[in,out] B
         B is COMPLEX array, dimension (LDB,NRHS)
         On entry, the M-by-NRHS right hand side matrix B.
         On exit, the N-by-NRHS solution matrix X.
         If m >= n and RANK = n, the residual sum-of-squares for
         the solution in the i-th column is given by the sum of
         squares of elements N+1:M in that column.
\param[in] LDB
         LDB is INTEGER
         The leading dimension of the array B. LDB >= max(1,M,N).
\param[in,out] JPVT
         JPVT is INTEGER array, dimension (N)
         On entry, if JPVT(i) .ne. 0, the i-th column of A is an
         initial column, otherwise it is a free column.  Before
         the QR factorization of A, all initial columns are
         permuted to the leading positions; only the remaining
         free columns are moved as a result of column pivoting
         during the factorization.
         On exit, if JPVT(i) = k, then the i-th column of A*P
         was the k-th column of A.
\param[in] RCOND
         RCOND is REAL
         RCOND is used to determine the effective rank of A, which
         is defined as the order of the largest leading triangular
         submatrix R11 in the QR factorization with pivoting of A,
         whose estimated condition number < 1/RCOND.
\param[out] RANK
         RANK is INTEGER
         The effective rank of A, i.e., the order of the submatrix
         R11.  This is the same as the order of the submatrix T11
         in the complete orthogonal factorization of A.
\param[out] WORK
         WORK is COMPLEX array, dimension
                     (min(M,N) + max( N, 2*min(M,N)+NRHS )),
\param[out] RWORK
         RWORK is REAL array, dimension (2*N)
\param[out] INFO
         INFO is INTEGER
         = 0:  successful exit
         < 0:  if INFO = -i, the i-th argument had an illegal value
Authors:
\author Univ. of Tennessee 
\author Univ. of California Berkeley 
\author Univ. of Colorado Denver 
\author NAG Ltd. 
\date November 2011
\ingroup complexGEsolve
   SUBROUTINE CGELSX( M, N, NRHS, A, LDA, B, LDB, JPVT, RCOND, RANK,
  $                   WORK, RWORK, INFO )
-- LAPACK driver routine (version 3.4.0) --
-- LAPACK is a software package provided by Univ. of Tennessee,    --
